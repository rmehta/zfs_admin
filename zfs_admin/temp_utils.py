import frappe

zfs_properties = ['origin',
 'setuid',
 'usedbyrefreservation',
 'logicalused',
 'primarycache',
 'logbias',
 'sync',
 'copies',
 'sharenfs',
 'referenced',
 'inconsistent',
 'createtxg',
 'canmount',
 'mountpoint',
 'casesensitivity',
 'guid',
 'usedbysnapshots',
 'readonly',
 'atime',
 'compression',
 'xattr',
 'aclmode',
 'filesystem_count',
 'dedup',
 'snapshot_limit',
 'aclinherit',
 'compressratio',
 'written',
 'version',
 'normalization',
 'filesystem_limit',
 'mounted',
 'mlslabel',
 'jailed',
 'secondarycache',
 'prevsnap',
 'available',
 'used',
 'exec',
 'refquota',
 'refcompressratio',
 'quota',
 'utf8only',
 'snapshot_count',
 'vscan',
 'reservation',
 'unique',
 'recordsize',
 'usedbychildren',
 'usedbydataset',
 'objsetid',
 'redundant_metadata',
 'volmode',
 'devices',
 'useraccounting',
 'nbmand',
 'logicalreferenced',
 'refreservation',
 'checksum',
 'snapdir',
 'sharesmb']

def make_property_fields():
	doc = frappe.get_doc("DocType", "ZFS Dataset")
	for p in zfs_properties:
		doc.append("fields", {
			"fieldname": p,
			"fieldtype": "Data",
			"label": p
		})

	doc.save()
	frappe.db.commit()
